/*
1717. Maximum Score From Removing Substrings
Solved
1868
Medium
Topics
premium lock icon
Companies
Hint
Google
You are given a string s and two integers x and y. You can perform two types of operations any number of times.

Remove substring "ab" and gain x points.
For example, when removing "ab" from "cabxbae" it becomes "cxbae".
Remove substring "ba" and gain y points.
For example, when removing "ba" from "cabxbae" it becomes "cabxe".
Return the maximum points you can gain after applying the above operations on s.

 

Example 1:

Input: s = "cdbcbbaaabab", x = 4, y = 5
Output: 19
Explanation:
- Remove the "ba" underlined in "cdbcbbaaabab". Now, s = "cdbcbbaaab" and 5 points are added to the score.
- Remove the "ab" underlined in "cdbcbbaaab". Now, s = "cdbcbbaa" and 4 points are added to the score.
- Remove the "ba" underlined in "cdbcbbaa". Now, s = "cdbcba" and 5 points are added to the score.
- Remove the "ba" underlined in "cdbcba". Now, s = "cdbc" and 5 points are added to the score.
Total score = 5 + 4 + 5 + 5 = 19.
Example 2:

Input: s = "aabbaaxybbaabb", x = 5, y = 4
Output: 20
 

*/

class Solution {
public:
    int maximumGain(string s, int X, int Y) {
        int points=0;
        if(X>Y)
        {
            points=removePattern(s,'a','b',X);
            points+=removePattern(s,'b','a',Y);
        }else
        {
            points=removePattern(s,'b','a',Y);
            points+=removePattern(s,'a','b',X);
        }
        return points;
        
    }

    int removePattern(string &s,char first,char second,int score)
    {//we will pop wherever i find the ab in first pass then second pass ba , and passes determine from maximumGain
        stack<char>st;
        int n=s.size();
        int points=0;
        // whil(!st.empty() )
        for(int i=0;i<n;i++)
        {
            if(!st.empty() &&st.top()==first && s[i]==second)
            {
                st.pop();
                points+=score;
            }else
            {
                st.push(s[i]);
            }
        }
        s.clear();
        while(!st.empty())
        {
            s+=st.top();
            st.pop();
        }
        reverse(s.begin(),s.end());

        return points;
    }
};